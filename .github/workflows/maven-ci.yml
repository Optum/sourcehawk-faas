name: Maven CI
on:
  push:
    branches:
      - main
      - 'releases/[1-9]+.[0-9]+.x'
    paths-ignore:
      - '.github/**'
      - '.gitignore'
      - 'CODE_OF_CONDUCT.md'
      - 'CONTRIBUTING.md'
      - 'INDIVIDUAL_CONTRIBUTOR_LICENSE.md'
      - 'LICENSE'
      - 'NOTICE.txt'
      - '**/README.md'
  pull_request:
    branches:
      - main
      - 'releases/[1-9]+.[0-9]+.x'
    paths-ignore:
      - '.github/**'
      - '.gitignore'
      - 'CODE_OF_CONDUCT.md'
      - 'CONTRIBUTING.md'
      - 'INDIVIDUAL_CONTRIBUTOR_LICENSE.md'
      - 'LICENSE'
      - 'NOTICE.txt'
      - '**/README.md'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Setup Java and Maven
        uses: actions/setup-java@v1
        with:
          java-version: 8
          server-id: ossrh
          server-username: SONATYPE_USERNAME
          server-password: SONATYPE_PASSWORD
          gpg-private-key: ${{ secrets.SONATYPE_GPG_PRIVATE_KEY }}
          gpg-passphrase: SONATYPE_GPG_PASSPHRASE
      - name: Set Maven Project Version
        shell: bash
        run: |
          BUILD_VERSION=$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout | tail -1 | tr -d '\r\n')
          [[ "$BUILD_VERSION" != *"-SNAPSHOT" ]] && BUILD_VERSION="${BUILD_VERSION}-SNAPSHOT" && ./mvnw --batch-mode versions:set -DnewVersion=$BUILD_VERSION || true
      - name: Build Maven Project
        if: success() && (github.event_name == 'pull_request')
        run: ./mvnw --batch-mode install -P ci.build
      - name: Build Maven Project and Deploy Snapshot
        if: success() && (github.event_name == 'push')
        run: ./mvnw --batch-mode deploy -P ci.deploy,ci.snapshot
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_GPG_PASSPHRASE: ${{ secrets.SONATYPE_GPG_PASSPHRASE }}
      - name: Archive Distrbutions
        uses: actions/upload-artifact@v2
        with:
          name: distributions
          path: |
            distributions/linux/target/sourcehawk
            distributions/debian/target/sourcehawk.deb
      - name: Aggregate Coverage Reports
        id: aggregate_coverage_reports
        if: success()
        run: |
          JACOCO_XML_REPORT_PATHS=$(find . -name "jacoco.xml" -printf '%P\n' | tr '\r\n' ',')
          echo ::set-output name=JACOCO_XML_REPORT_PATHS::$JACOCO_XML_REPORT_PATHS
      - name: Analyze with SonarCloud
        if: success() && (github.event_name == 'push')
        continue-on-error: true
        run: ./mvnw --batch-mode sonar:sonar -Dsonar.organization=optum -Dsonar.projectKey=optum_sourcehawk -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
      - name: Publish Test Report
        if: always()
        continue-on-error: true
        uses: scacap/action-surefire-report@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: '**/target/surefire-reports/TEST-*.xml,**/target/failsafe-reports/TEST-*.xml'
      - name: Publish Codecov Report
        if: always()
        continue-on-error: true
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ steps.aggregate_coverage_reports.outputs.JACOCO_XML_REPORT_PATHS }}
